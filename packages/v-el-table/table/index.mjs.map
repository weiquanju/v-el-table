{"version":3,"file":"index.mjs","sources":["../../../app/v-el-table-source/src/components/table/index.ts"],"sourcesContent":["import { ElTable, ElTableColumn } from 'element-plus'\r\nimport { type FunctionalComponent, h, type SetupContext } from 'vue'\r\nimport { eventsTransform } from '../utils'\r\nimport type { TableBasicProps, TableColumnSlots } from './type'\r\nexport type * from './type'\r\n\r\nconst VElTable = function <D, T extends TableBasicProps<D>>(\r\n  { events = {}, table = { data: [], tableLayout: 'auto' }, columns = [] }: T,\r\n  { slots: { append } }: SetupContext,\r\n) {\r\n  const slots = {\r\n    default: () =>\r\n      columns.map((column) => {\r\n        const { default: d, header } = column as TableColumnSlots\r\n        const props = column\r\n        return h(ElTableColumn, props, { default: d, header })\r\n      }),\r\n    append: append,\r\n  }\r\n  return h(ElTable as Parameters<typeof h>[0], { ...eventsTransform(events), ...table }, slots)\r\n} as FunctionalComponent<TableBasicProps>\r\nexport default VElTable\r\n"],"names":["VElTable","events","table","columns","append","slots","column","d","header","h","ElTableColumn","ElTable","eventsTransform"],"mappings":";;;AAMM,MAAAA,IAAW,SACf,EAAE,QAAAC,IAAS,CAAA,GAAI,OAAAC,IAAQ,EAAE,MAAM,IAAI,aAAa,OAAO,GAAG,SAAAC,IAAU,GAAG,GACvE,EAAE,OAAO,EAAE,QAAAC,EAAO,KAClB;AACA,QAAMC,IAAQ;AAAA,IACZ,SAAS,MACPF,EAAQ,IAAI,CAACG,MAAW;AACtB,YAAM,EAAE,SAASC,GAAG,QAAAC,EAAA,IAAWF;AAE/B,aAAOG,EAAEC,GADKJ,GACiB,EAAE,SAASC,GAAG,QAAAC,GAAQ;AAAA,IAAA,CACtD;AAAA,IACH,QAAAJ;AAAA,EAAA;AAEK,SAAAK,EAAEE,GAAoC,EAAE,GAAGC,EAAgBX,CAAM,GAAG,GAAGC,KAASG,CAAK;AAC9F;"}