{"version":3,"file":"index.mjs","sources":["../../../app/v-el-table-source/src/components/utils/I18N.ts","../../../app/v-el-table-source/src/components/utils/i18n-init.ts","../../../app/v-el-table-source/src/components/utils/index.ts"],"sourcesContent":["import { computed, reactive, ref } from 'vue'\r\n\r\nclass I18N {\r\n  locale = ref('en')\r\n  translations: { [key: string]: { [key: string]: string } }\r\n  constructor(locale: string) {\r\n    this.locale.value = locale\r\n    this.translations = reactive({\r\n      en: {\r\n        reset: 'reset',\r\n        query: 'query',\r\n      },\r\n      'zh-cn': {\r\n        reset: '重置',\r\n        query: '查询',\r\n      },\r\n    })\r\n  }\r\n  getTranslation(key: string) {\r\n    return computed(() => this.translations[this.locale.value][key])\r\n  }\r\n  t(key: string) {\r\n    return this.getTranslation(key)\r\n  }\r\n  getLocale() {\r\n    return this.locale\r\n  }\r\n  setLocale(locale: string) {\r\n    this.locale.value = locale\r\n  }\r\n  setTranslations(translations: { [key: string]: { [key: string]: string } }) {\r\n    for (const locale in translations) {\r\n      this.translations[locale] = translations[locale]\r\n    }\r\n  }\r\n  setLocalization(localization: { [key: string]: string }) {\r\n    this.translations[this.locale.value] = localization\r\n  }\r\n  setTranslationByLocale(locale: string, translation: { [key: string]: string }) {\r\n    this.translations[locale] = translation\r\n  }\r\n}\r\n\r\nexport const i18n = new I18N('en')\r\n","// import { useGlobalConfig } from 'element-plus'\r\nimport { ref, type Ref, watchEffect, type WatchOptionsBase, type WatchStopHandle } from 'vue'\r\nimport { i18n } from './I18N'\r\n\r\n// const local: Ref<any> = useGlobalConfig('locale') || ref({ name: '' })\r\n/*使用ElementPlus语言配置*/\r\nexport const lang: Ref<string> = ref('en')\r\n\r\n// 加载后，开始监听\r\nlet stopHandle: WatchStopHandle | undefined = undefined\r\n\r\nexport const watchLang = ()=>{\r\n  if (!stopHandle) {\r\n    stopHandle = watchEffect(\r\n      () => {\r\n        i18n.setLocale(lang.value)\r\n      },\r\n      { immediate: true } as WatchOptionsBase,\r\n    )\r\n  }\r\n}\r\n\r\nexport const stopWatchLang = () => {\r\n  if (stopHandle) {\r\n    stopHandle()\r\n  }\r\n}","import { isReactive, reactive, toRef } from 'vue'\r\nimport type { EventsHandlers, ObjectType } from '../interfaces'\r\n\r\nexport * from './I18N'\r\nexport * from './i18n-init'\r\n\r\nexport const toPascalNameStyle = (str: string) =>\r\n  str.replace(/[-_ ](\\w)|(^\\w)/g, (all, one) => {\r\n    return (!one ? all : one).toUpperCase()\r\n  })\r\n\r\n/**\r\n * @link https://github.com/vuejs/jsx-next/issues/217#issuecomment-743046201 How to use v-bind without arguments in jsx?\r\n * 将event handlers 由 {click:(event)=>xxx} 转为 {onClick:(event)=>xxx}\r\n */\r\nexport const eventsTransform = (handlers?: EventsHandlers) => {\r\n  if (!handlers) {\r\n    return {} as EventsHandlers\r\n  }\r\n  const map = new Map<string, (...args: unknown[]) => void>()\r\n  Object.entries(handlers).forEach(([key, handler]) => map.set(toCamelCase(`on-${key}`), handler))\r\n  return Object.fromEntries(map)\r\n}\r\n\r\nexport const toCamelCase = (str: string) => {\r\n  return str.replace(/[-_ ](\\w)|(^\\w)/g, (all, one) => {\r\n    return !one ? all.toLowerCase() : one.toUpperCase()\r\n  })\r\n}\r\n\r\nexport const toCamelCaseProp = (props: { [key: string]: unknown }) => {\r\n  const propKeys = Object.keys(props)\r\n  if (isReactive(props)) {\r\n    return reactive(\r\n      Object.fromEntries(\r\n        propKeys.map((key: string) => {\r\n          const value = toRef(props, key)\r\n          if (propKeys.find((key) => /[-_ ]/.test(key))) {\r\n            return [toCamelCase(key), value]\r\n          }\r\n          return [key, value]\r\n        })\r\n      )\r\n    )\r\n  }\r\n  return Object.fromEntries(\r\n    propKeys.map((key: string) => {\r\n      const value = props[key]\r\n      if (propKeys.find((key) => /[-_ ]/.test(key))) {\r\n        return [toCamelCase(key), value]\r\n      }\r\n      return [key, value]\r\n    })\r\n  )\r\n}\r\n\r\nexport const resetValue = <T = ObjectType>(formData: T) => {\r\n  for (const key in formData) {\r\n    // object类型处理，避免object类型被置为undifined，避免业务层因数据类型改变出现异常的情况\r\n    if (formData[key] !== null && typeof formData[key] === 'object') {\r\n      //数组、对象、函数类型\r\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n      const val = formData[key] as any\r\n      if (typeof val.constructor === 'function') {\r\n        formData[key] = new val.constructor()\r\n        continue\r\n      }\r\n    }\r\n    ;(formData[key] as unknown) = undefined\r\n  }\r\n  return formData\r\n}\r\n/**\r\n * @example\r\n * const path = 'a.b.c'\r\n * const obj = { a: { b: { c: 1 } } }\r\n * console.log(at(path, obj))\r\n */\r\nexport function at<T = unknown>(path: string, obj: unknown) {\r\n  const parts = path.split('.')\r\n  let result = obj\r\n  try {\r\n    for (let i = 0; i < parts.length; i++) {\r\n      if ([undefined, null].includes(result as undefined | null)) {\r\n        return result as undefined | null\r\n      } else {\r\n        result = (result as ObjectType)[parts[i]]\r\n      }\r\n    }\r\n    return result as T\r\n  } catch (error) {\r\n    console.error(error)\r\n  }\r\n}\r\n"],"names":["I18N","locale","__publicField","ref","reactive","key","computed","translations","localization","translation","i18n","lang","stopHandle","watchLang","watchEffect","stopWatchLang","toPascalNameStyle","str","all","one","eventsTransform","handlers","map","handler","toCamelCase","toCamelCaseProp","props","propKeys","isReactive","value","toRef","resetValue","formData","val","at","path","obj","parts","result","i","error"],"mappings":"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"}